sharedobject "libgtk-3.so.0"

/*
extern void API_gtk_list_store_append(GtkListStore store,pointer iter): gtk_list_store_append;
extern void API_gtk_list_store_remove(GtkListStore store,pointer iter): gtk_list_store_remove;
*/

extends GApplication
{
  extern int run(int argc,array argv);
  extern void quit();
}

extends GtkStyleContext
{
  extern void add_class(string class_name);
}

extends GtkApplication
{
  extern void add_window(GtkWindow win);
  extern void remove_window(GtkWindow win);
}

extends GtkWidget
{
  extern void show();
  extern void hide();
  extern void map();
  extern void unmap();
  extern const GtkStyleContext get_style_context();
  extern void destroy();
}

extends GtkDialog
{
  extern int run();
  extern void add_action_widget(GtkWidget action_widget,int response_id);
  extern const GtkButton add_button(string text,int response_id);
  extern const GtkHeaderBar get_header_bar();
  extern void response(int response_id);
}

extends GtkWindow
{
  extern void set_titlebar(GtkWidget titlebar);
}

extends GtkBox 
{
  extern void pack_start(GtkWidget child,bool fill,bool expand,int spacing);
  extern void pack_end(GtkWidget child,bool fill,bool expand,int spacing);
}

extends GtkContainer 
{
  extern void add(GtkWidget child);
  extern void remove(GtkWidget child);
}

extends GtkHeaderBar
{
  extern void pack_start(GtkWidget child);
  extern void pack_end(GtkWidget child);
}


extends GtkActionBar
{
  extern GtkActionBar new();

  extern void pack_start(GtkWidget child);
  extern void pack_end(GtkWidget child);
}

extends GtkBin
{
  extern GtkWidget get_child();
}

extends GtkNotebook 
{
  extern int append_page(GtkWidget child,GtkWidget label);
}

extends GtkPopover
{
  extern void popup();
  extern void popdown();
}

extends GtkListStore
{
  extern GtkListStore new(int n);
  extern void set_column_types(int n,array types);
  extern void append(GtkTreeIter iter);
  extern void remove(GtkTreeIter iter);
  extern void set_value(GtkTreeIter iter,int column,var src);
}

extends GtkTreeModel
{
  extern bool get_iter_first(GtkTreeIter iter);
  extern bool iter_next(GtkTreeIter iter);

  extern void get_value(GtkTreeIter iter,int column,pointer dest);
}

extends GtkTreeIter
{
  GtkTreeIter new() {
	extern GtkTreeIter g_malloc(int size);
	return g_malloc(128);
  }
}

extends GtkTreeView
{
  extern void append_column(GtkTreeViewColumn column);
}
